name: Build FFmpeg 8.0 for iOS ARM64 (Jailbroken)

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-13  # Use macOS runner with Xcode support
    
    steps:
    - name: Checkout FFmpeg source
      uses: actions/checkout@v4
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '15.0'
        
    - name: Install dependencies via Homebrew
      run: |
        # Install required build tools and libraries
        brew install nasm yasm pkg-config
        
        # Install codec libraries
        brew install x264 x265 libvpx opus vorbis theora lame
        brew install libass freetype fontconfig fribidi
        brew install sox rubberband snappy zvbi zeromq webp libxml2
        brew install vid.stab zimg
        
    - name: Setup iOS SDK paths
      run: |
        echo "XCODE_PATH=$(xcode-select -p)" >> $GITHUB_ENV
        echo "IOS_SDK_PATH=$(xcrun --sdk iphoneos --show-sdk-path)" >> $GITHUB_ENV
        echo "IOS_MIN_VERSION=12.0" >> $GITHUB_ENV
        
    - name: Configure build environment
      run: |
        mkdir -p build-ios
        cd build-ios
        
        # Set up cross-compilation variables
        export CROSS_TOP="${XCODE_PATH}/Platforms/iPhoneOS.platform/Developer"
        export CROSS_SDK="iPhoneOS.sdk"
        export CC="${XCODE_PATH}/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang"
        export CXX="${XCODE_PATH}/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++"
        export AR="${XCODE_PATH}/Toolchains/XcodeDefault.xctoolchain/usr/bin/ar"
        export NM="${XCODE_PATH}/Toolchains/XcodeDefault.xctoolchain/usr/bin/nm"
        export RANLIB="${XCODE_PATH}/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib"
        export STRIP="${XCODE_PATH}/Toolchains/XcodeDefault.xctoolchain/usr/bin/strip"
        
        # Configure FFmpeg with iOS-specific settings
        ../configure \
            --prefix=/var/jb/usr \
            --enable-cross-compile \
            --target-os=darwin \
            --arch=arm64 \
            --cc="$CC" \
            --cxx="$CXX" \
            --nm="$NM" \
            --ar="$AR" \
            --ranlib="$RANLIB" \
            --strip="$STRIP" \
            --sysroot="$IOS_SDK_PATH" \
            --extra-cflags="-arch arm64 -mios-version-min=$IOS_MIN_VERSION -fembed-bitcode" \
            --extra-ldflags="-arch arm64 -mios-version-min=$IOS_MIN_VERSION" \
            --enable-shared \
            --enable-pthreads \
            --enable-version3 \
            --enable-gpl \
            --enable-nonfree \
            --enable-ffplay \
            \
            --enable-libx264 \
            --enable-libx265 \
            --enable-libvpx \
            --enable-libopus \
            --enable-libvorbis \
            --enable-libtheora \
            --enable-libmp3lame \
            --enable-libass \
            --enable-libfreetype \
            --enable-libfontconfig \
            --enable-libfribidi \
            --enable-libsoxr \
            --enable-librubberband \
            --enable-libsnappy \
            --enable-libzvbi \
            --enable-libzmq \
            --enable-libwebp \
            --enable-libxml2 \
            --enable-libvidstab \
            --enable-libzimg \
            \
            --enable-libaom-av1 \
            --enable-libdav1d \
            --enable-libsvtav1 \
            --enable-librav1e \
            --enable-libvvenc \
            --enable-libjxl \
            --enable-libkvazaar \
            --enable-liblc3 \
            \
            --disable-libbluray \
            --disable-libjack \
            --disable-indev=jack \
            --disable-xlib \
            --disable-audiotoolbox \
            --disable-videotoolbox \
            --disable-debug \
            --disable-doc \
            --disable-ffprobe \
            --enable-optimizations \
            --enable-small
            
    - name: Build FFmpeg
      run: |
        cd build-ios
        make -j$(sysctl -n hw.ncpu)
        
    - name: Package build
      run: |
        cd build-ios
        make install DESTDIR=$PWD/install
        
        # Create archive for iOS jailbreak environment
        mkdir -p ffmpeg-8.0-ios-arm64-jailbreak
        cp -r install/var/jb/usr/* ffmpeg-8.0-ios-arm64-jailbreak/
        
        # Create deb package structure for Cydia/Sileo
        mkdir -p deb/DEBIAN deb/var/jb/usr
        cp -r install/var/jb/usr/* deb/var/jb/usr/
        
        # Create control file for deb package
        cat > deb/DEBIAN/control << EOF
        Package: ffmpeg
        Version: 8.0-1
        Section: Multimedia
        Priority: optional
        Architecture: iphoneos-arm64
        Depends: 
        Maintainer: Your Name <your.email@example.com>
        Description: FFmpeg 8.0 - multimedia framework
         FFmpeg is a complete, cross-platform solution to record, convert
         and stream audio and video. This version is built for iOS ARM64
         with extensive codec support.
        EOF
        
        # Build deb package
        dpkg-deb --build deb ffmpeg_8.0-1_iphoneos-arm64.deb
        
        # Create tarball
        tar -czf ffmpeg-8.0-ios-arm64-jailbreak.tar.gz ffmpeg-8.0-ios-arm64-jailbreak/
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ffmpeg-8.0-ios-arm64
        path: |
          build-ios/ffmpeg-8.0-ios-arm64-jailbreak.tar.gz
          build-ios/ffmpeg_8.0-1_iphoneos-arm64.deb
        retention-days: 30
        
    - name: Create Release
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v8.0-${{ github.run_number }}
        name: FFmpeg 8.0 iOS ARM64 Build ${{ github.run_number }}
        body: |
          FFmpeg 8.0 compiled for iOS ARM64 (jailbroken devices)
          
          ## Features:
          - Full codec support (H.264, H.265/HEVC, VP8/VP9, AV1)
          - Audio codecs (AAC, MP3, Opus, Vorbis, Theora)
          - Subtitle support (libass, zvbi)
          - Video filters and effects
          - Hardware acceleration support
          - Modern codecs: AV1, JPEG XL, VVC
          
          ## Installation on jailbroken iOS:
          1. Download the .deb file
          2. Install via Cydia/Sileo or manually with dpkg
          3. FFmpeg will be installed to /var/jb/usr/bin/ffmpeg
          
          ## New in FFmpeg 8.0:
          - Improved AV1 encoding performance
          - JPEG XL support
          - VVC (H.266) experimental support
          - Enhanced hardware acceleration
          - Better HDR support
        files: |
          build-ios/ffmpeg-8.0-ios-arm64-jailbreak.tar.gz
          build-ios/ffmpeg_8.0-1_iphoneos-arm64.deb
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}